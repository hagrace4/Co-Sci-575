#include <iostream>
#include <iomanip>
#include <fstream>

void meal_cost(kids, meal_cost);
void additional_cost(tip_calc, tax_calc, surcharge_calc);
//function 3 prototype
void Calc_total_and_output();

using namespace std;

int main()
{
	//const variables
	const float tax = .18;
	const float kids_saving = .6;
	const float tip = .18;
	const float surcharge = .07;
	const float standard_meal = 21.75;
	const float deluxe_meal = 25.80;
	
	
	//declare variables
	char meal_type;
	char weekend;
	float meal_cost;
	int adults;
	int kids;
	float tip_Calc;
	float tax_Calc;
	float surcharge_calc;
	int ID;
	
	
	//do error validation,
	cout << "Enter party ID \n";
	cin >> ID;

	cout << "What is the number of adults? \n";
	cin >> adults;
	if (adults < 0)
	{
		cout << "Error \n";
		cin >> adults;
	}
	cout << "What is the number of children? \n";
	cin >> kids;
	if (kids< 0)
	{
		cout << "Error \n";
		cin >> kids;
	}

	cout << "What is the meal type? \n";
	cin >> meal_type;
	if (meal_type != S || meal_type != D)
	{
		cout << "Error \n";
		cin >> meal_type;
	}

	cout << "Is the catering done over the weekend? \n";
	cin >> weekend;
	
ifstream infile; 
ofstream outfile; 
int ID, adults, kids;
char meal_type;
float total_meal_cost, tax, tip, surcharge, total_party_cost;

infile.open ("c:\\temp\\myfile.dat");
if (!infile)						//there was an error on open, file not found
{	cout << "Cannot open file, terminating program"<< endl;
exit (1);
}
	cout << "Open the output file. \n";
	outfile.open ("c:\\temp\\newfile.dat);
	infile >> name; 					//this is called a priming read, only used once
	while (infile)						//or while (!infile.eof())
	{	outfile <<name<< endl;;
		infile>> name;
	}
	infile.close();
	outfile.close ();
	return 0;


}
//Function 2
{
	void meal_cost(kids, meal_cost)
		kids= (meal_type * kids_savings)
		meal_cost= (meal_type * adults) + (meal_type * kids)
}

//Function 3

{
	void additional_cost(tip_calc, tax_calc, surcharge_calc);
	tip_Calc = tip * meal_cost;
	tax_Calc = tax * meal_cost;
	subcharge_calc = subcharge * meal_cost;
}

//Function 4
{
	void Calc_total_and_output();
	cout << ID "\t\t" setw(10) << adults "\t\t" setw(10) << kids "\t\t" setw(10) << meal_cost;
	cout << surcharge_calc "\t\t" setw(10) << tax_calc "\t\t" setw(10) << tip_calc "\t\t" setw(10);
	cout << total_cost_of_party "\t\t" setw(10) << deposit "\t\t" setw(10) << total_balance_due << endl;
}
